import { BlockingPolicyModelOptions } from "./options/BlockingPolicyModelOptions";
import { BlockingPolicyModelLocationDetectionIsEnableOptions } from "./options/BlockingPolicyModelLocationDetectionIsEnableOptions";
import { BlockingPolicyModelLocationDetectionIsDisableOptions } from "./options/BlockingPolicyModelLocationDetectionIsDisableOptions";
import { BlockingPolicyModelAnonymousIpDetectionIsEnableOptions } from "./options/BlockingPolicyModelAnonymousIpDetectionIsEnableOptions";
import { BlockingPolicyModelAnonymousIpDetectionIsDisableOptions } from "./options/BlockingPolicyModelAnonymousIpDetectionIsDisableOptions";
import { BlockingPolicyModelHostingProviderIpDetectionIsEnableOptions } from "./options/BlockingPolicyModelHostingProviderIpDetectionIsEnableOptions";
import { BlockingPolicyModelHostingProviderIpDetectionIsDisableOptions } from "./options/BlockingPolicyModelHostingProviderIpDetectionIsDisableOptions";
import { BlockingPolicyModelReputationIpDetectionIsEnableOptions } from "./options/BlockingPolicyModelReputationIpDetectionIsEnableOptions";
import { BlockingPolicyModelReputationIpDetectionIsDisableOptions } from "./options/BlockingPolicyModelReputationIpDetectionIsDisableOptions";
import { BlockingPolicyModelIpAddressesDetectionIsEnableOptions } from "./options/BlockingPolicyModelIpAddressesDetectionIsEnableOptions";
import { BlockingPolicyModelIpAddressesDetectionIsDisableOptions } from "./options/BlockingPolicyModelIpAddressesDetectionIsDisableOptions";
import { BlockingPolicyModelDefaultRestriction } from "./enum/BlockingPolicyModelDefaultRestriction";
import { BlockingPolicyModelLocationDetection } from "./enum/BlockingPolicyModelLocationDetection";
import { BlockingPolicyModelLocationRestriction } from "./enum/BlockingPolicyModelLocationRestriction";
import { BlockingPolicyModelAnonymousIpDetection } from "./enum/BlockingPolicyModelAnonymousIpDetection";
import { BlockingPolicyModelAnonymousIpRestriction } from "./enum/BlockingPolicyModelAnonymousIpRestriction";
import { BlockingPolicyModelHostingProviderIpDetection } from "./enum/BlockingPolicyModelHostingProviderIpDetection";
import { BlockingPolicyModelHostingProviderIpRestriction } from "./enum/BlockingPolicyModelHostingProviderIpRestriction";
import { BlockingPolicyModelReputationIpDetection } from "./enum/BlockingPolicyModelReputationIpDetection";
import { BlockingPolicyModelReputationIpRestriction } from "./enum/BlockingPolicyModelReputationIpRestriction";
import { BlockingPolicyModelIpAddressesDetection } from "./enum/BlockingPolicyModelIpAddressesDetection";
import { BlockingPolicyModelIpAddressRestriction } from "./enum/BlockingPolicyModelIpAddressRestriction";
export default class BlockingPolicyModel {
    private readonly passServices;
    private readonly defaultRestriction;
    private readonly locationDetection;
    private readonly anonymousIpDetection;
    private readonly hostingProviderIpDetection;
    private readonly reputationIpDetection;
    private readonly ipAddressesDetection;
    private readonly locations;
    private readonly locationRestriction;
    private readonly anonymousIpRestriction;
    private readonly hostingProviderIpRestriction;
    private readonly reputationIpRestriction;
    private readonly ipAddresses;
    private readonly ipAddressRestriction;
    constructor(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, options?: BlockingPolicyModelOptions | null);
    static locationDetectionIsEnable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, locations: string[], locationRestriction: BlockingPolicyModelLocationRestriction, options?: BlockingPolicyModelLocationDetectionIsEnableOptions | null): BlockingPolicyModel;
    static locationDetectionIsDisable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, options?: BlockingPolicyModelLocationDetectionIsDisableOptions | null): BlockingPolicyModel;
    static anonymousIpDetectionIsEnable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, anonymousIpRestriction: BlockingPolicyModelAnonymousIpRestriction, options?: BlockingPolicyModelAnonymousIpDetectionIsEnableOptions | null): BlockingPolicyModel;
    static anonymousIpDetectionIsDisable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, options?: BlockingPolicyModelAnonymousIpDetectionIsDisableOptions | null): BlockingPolicyModel;
    static hostingProviderIpDetectionIsEnable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, hostingProviderIpRestriction: BlockingPolicyModelHostingProviderIpRestriction, options?: BlockingPolicyModelHostingProviderIpDetectionIsEnableOptions | null): BlockingPolicyModel;
    static hostingProviderIpDetectionIsDisable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, options?: BlockingPolicyModelHostingProviderIpDetectionIsDisableOptions | null): BlockingPolicyModel;
    static reputationIpDetectionIsEnable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, reputationIpRestriction: BlockingPolicyModelReputationIpRestriction, options?: BlockingPolicyModelReputationIpDetectionIsEnableOptions | null): BlockingPolicyModel;
    static reputationIpDetectionIsDisable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, ipAddressesDetection: BlockingPolicyModelIpAddressesDetection, options?: BlockingPolicyModelReputationIpDetectionIsDisableOptions | null): BlockingPolicyModel;
    static ipAddressesDetectionIsEnable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, ipAddressRestriction: BlockingPolicyModelIpAddressRestriction, options?: BlockingPolicyModelIpAddressesDetectionIsEnableOptions | null): BlockingPolicyModel;
    static ipAddressesDetectionIsDisable(passServices: string[], defaultRestriction: BlockingPolicyModelDefaultRestriction, locationDetection: BlockingPolicyModelLocationDetection, anonymousIpDetection: BlockingPolicyModelAnonymousIpDetection, hostingProviderIpDetection: BlockingPolicyModelHostingProviderIpDetection, reputationIpDetection: BlockingPolicyModelReputationIpDetection, options?: BlockingPolicyModelIpAddressesDetectionIsDisableOptions | null): BlockingPolicyModel;
    properties(): {
        [name: string]: any;
    };
}
