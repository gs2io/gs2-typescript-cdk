import InventoryModelRef from "./InventoryModelRef";
import SimpleInventoryModelRef from "./SimpleInventoryModelRef";
import BigInventoryModelRef from "./BigInventoryModelRef";
import AddCapacityByUserId from "../stampSheet/AddCapacityByUserId";
import SetCapacityByUserId from "../stampSheet/SetCapacityByUserId";
import AcquireItemSetByUserId from "../stampSheet/AcquireItemSetByUserId";
import AcquireItemSetWithGradeByUserId from "../stampSheet/AcquireItemSetWithGradeByUserId";
import AddReferenceOfByUserId from "../stampSheet/AddReferenceOfByUserId";
import DeleteReferenceOfByUserId from "../stampSheet/DeleteReferenceOfByUserId";
import AcquireSimpleItemsByUserId from "../stampSheet/AcquireSimpleItemsByUserId";
import AcquireCount from "../model/AcquireCount";
import SetSimpleItemsByUserId from "../stampSheet/SetSimpleItemsByUserId";
import HeldCount from "../model/HeldCount";
import AcquireBigItemByUserId from "../stampSheet/AcquireBigItemByUserId";
import SetBigItemByUserId from "../stampSheet/SetBigItemByUserId";
import ConsumeItemSetByUserId from "../stampSheet/ConsumeItemSetByUserId";
import ConsumeSimpleItemsByUserId from "../stampSheet/ConsumeSimpleItemsByUserId";
import ConsumeCount from "../model/ConsumeCount";
import ConsumeBigItemByUserId from "../stampSheet/ConsumeBigItemByUserId";
import VerifyInventoryCurrentMaxCapacityByUserId from "../stampSheet/VerifyInventoryCurrentMaxCapacityByUserId";
import { InventoryVerifyType } from "../stampSheet/enum/InventoryVerifyType";
import VerifyItemSetByUserId from "../stampSheet/VerifyItemSetByUserId";
import { ItemSetVerifyType } from "../stampSheet/enum/ItemSetVerifyType";
import VerifyReferenceOfByUserId from "../stampSheet/VerifyReferenceOfByUserId";
import { ReferenceOfVerifyType } from "../stampSheet/enum/ReferenceOfVerifyType";
import VerifySimpleItemByUserId from "../stampSheet/VerifySimpleItemByUserId";
import { SimpleItemVerifyType } from "../stampSheet/enum/SimpleItemVerifyType";
import VerifyBigItemByUserId from "../stampSheet/VerifyBigItemByUserId";
import { BigItemVerifyType } from "../stampSheet/enum/BigItemVerifyType";
export default class NamespaceRef {
    private readonly namespaceName;
    constructor(namespaceName: string);
    inventoryModel(inventoryName: string): InventoryModelRef;
    simpleInventoryModel(inventoryName: string): SimpleInventoryModelRef;
    bigInventoryModel(inventoryName: string): BigInventoryModelRef;
    addCapacity(inventoryName: string, addCapacityValue: number, userId?: string): AddCapacityByUserId;
    setCapacity(inventoryName: string, newCapacityValue: number, userId?: string): SetCapacityByUserId;
    acquireItemSet(inventoryName: string, itemName: string, acquireCount: number, expiresAt?: number | null, createNewItemSet?: boolean | null, itemSetName?: string | null, userId?: string): AcquireItemSetByUserId;
    acquireItemSetWithGrade(inventoryName: string, itemName: string, gradeModelId: string, gradeValue: number, userId?: string): AcquireItemSetWithGradeByUserId;
    addReferenceOf(inventoryName: string, itemName: string, referenceOf: string, itemSetName?: string | null, userId?: string): AddReferenceOfByUserId;
    deleteReferenceOf(inventoryName: string, itemName: string, referenceOf: string, itemSetName?: string | null, userId?: string): DeleteReferenceOfByUserId;
    acquireSimpleItems(inventoryName: string, acquireCounts: AcquireCount[], userId?: string): AcquireSimpleItemsByUserId;
    setSimpleItems(inventoryName: string, counts: HeldCount[], userId?: string): SetSimpleItemsByUserId;
    acquireBigItem(inventoryName: string, itemName: string, acquireCount: string, userId?: string): AcquireBigItemByUserId;
    setBigItem(inventoryName: string, itemName: string, count: string, userId?: string): SetBigItemByUserId;
    consumeItemSet(inventoryName: string, itemName: string, consumeCount: number, itemSetName?: string | null, userId?: string): ConsumeItemSetByUserId;
    consumeSimpleItems(inventoryName: string, consumeCounts: ConsumeCount[], userId?: string): ConsumeSimpleItemsByUserId;
    consumeBigItem(inventoryName: string, itemName: string, consumeCount: string, userId?: string): ConsumeBigItemByUserId;
    verifyInventoryCurrentMaxCapacity(inventoryName: string, verifyType: InventoryVerifyType, currentInventoryMaxCapacity: number, multiplyValueSpecifyingQuantity?: boolean | null, userId?: string): VerifyInventoryCurrentMaxCapacityByUserId;
    verifyItemSet(inventoryName: string, itemName: string, verifyType: ItemSetVerifyType, count: number, itemSetName?: string | null, multiplyValueSpecifyingQuantity?: boolean | null, userId?: string): VerifyItemSetByUserId;
    verifyReferenceOf(inventoryName: string, itemName: string, referenceOf: string, verifyType: ReferenceOfVerifyType, itemSetName?: string | null, userId?: string): VerifyReferenceOfByUserId;
    verifySimpleItem(inventoryName: string, itemName: string, verifyType: SimpleItemVerifyType, count: number, multiplyValueSpecifyingQuantity?: boolean | null, userId?: string): VerifySimpleItemByUserId;
    verifyBigItem(inventoryName: string, itemName: string, verifyType: BigItemVerifyType, count: string, multiplyValueSpecifyingQuantity?: boolean | null, userId?: string): VerifyBigItemByUserId;
    grn(): string;
}
